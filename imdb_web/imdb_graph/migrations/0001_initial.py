# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-09-02 02:40
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('fb_likes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100, unique=True)),
                ('fb_likes', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(db_index=True, max_length=150)),
                ('year', models.IntegerField(db_index=True)),
                ('duration', models.IntegerField()),
                ('is_color', models.BooleanField()),
                ('num_critic_for_reviews', models.IntegerField()),
                ('num_users_for_reviews', models.IntegerField()),
                ('num_voted_users', models.IntegerField()),
                ('domestic_gross', models.BigIntegerField()),
                ('worldwide_gross', models.BigIntegerField()),
                ('budget', models.BigIntegerField()),
                ('cast_total_facebook_likes', models.IntegerField()),
                ('imdb_link', models.CharField(max_length=128)),
                ('language', models.CharField(max_length=64)),
                ('country', models.CharField(max_length=128)),
                ('content_rating', models.CharField(max_length=16)),
                ('imdb_score', models.FloatField()),
                ('aspect_ratio', models.FloatField()),
                ('fb_likes', models.IntegerField(default=0)),
                ('image_url', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='MovieActor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_graph.Actor')),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_graph.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(db_index=True, max_length=30)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_graph.Movie')),
            ],
        ),
        migrations.CreateModel(
            name='MoviePlotKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=120)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_graph.Movie')),
            ],
        ),
        migrations.AddField(
            model_name='movie',
            name='actors',
            field=models.ManyToManyField(through='imdb_graph.MovieActor', to='imdb_graph.Actor'),
        ),
        migrations.AddField(
            model_name='movie',
            name='director',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='imdb_graph.Director'),
        ),
        migrations.AlterUniqueTogether(
            name='movieplotkeyword',
            unique_together=set([('movie', 'keyword')]),
        ),
        migrations.AlterUniqueTogether(
            name='moviegenre',
            unique_together=set([('movie', 'genre')]),
        ),
        migrations.AlterUniqueTogether(
            name='movieactor',
            unique_together=set([('movie', 'actor')]),
        ),
        migrations.AlterUniqueTogether(
            name='movie',
            unique_together=set([('title', 'year')]),
        ),
    ]
